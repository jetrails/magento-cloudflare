<section
	class="cloudflare page_rules page_rules"
	data-endpoint="<?php echo $this->getApiEndpoint () ?>"
	data-form-key="<?php echo $this->getFormKey () ?>"
	data-tab-name="page_rules"
	data-section-name="page_rules" >
	<div class="row" >
		<div class="wrapper_left" >
			<span class="section_title" >Page Rules</span>
			<p><strong>You have 1 Page Rule left</strong>. <a href="#">Buy More Page Rules</a>.</p>
			<p>Page Rules let you control which Cloudflare settings trigger on a given URL. Only one Page Rule will trigger per URL, so it is helpful if you sort Page Rules in priority order, and make your URL patterns as specific as possible.</p>
		</div>
		<div class="wrapper_right" >
			<div>
				<input type="button" value="Create Page Rule" />
			</div>
		</div>
	</div>
	<div class="row" >
		<div class="wrapper_left" >
			somthing
		</div>
	</div>
	<div class="lightbox" style="background-image: url(<?php echo $this->getSkinUrl ('images/cloudflare/loading.svg') ?>)" > </div>
	<div class="row collapsable" >
		<div class="wrapper_bottom" >
			<a data-tab="help" >Help</a>
		</div>
		<div data-tab-content="help" >
			<h3>What are Page Rules?</h3>
			<p>Page Rules give you granular, URL-based control of Cloudflare’s settings. The most important thing to know about Page Rules is that only one Page Rule will trigger on a URL, so it’s important to sort your Page Rules in priority order, and keep your most specific Page Rules at the top.</p>
			<h4>What patterns are allowed in Page Rules?</h4>
			<p> URLs in Page Rules allow you to use wildcards to apply a Page Rule across multiple pages. For example, you could use <code>*example.com</code> to match both <code>http://example.com</code> and <code>https://example.com</code>.</p>
			<p> If you are using a Forwarding Page Rule, then you can map those wildcards to variables. In the forwarding URL, you can specify $1, $2 and so on that match the wildcards in the original URL, in order from left to right.</p>
			<p> For example, you could forward <code>http://*.example.com/*</code> to <code>http://$2.example.com/$1.jpg</code>. This rule would match <code>http://cloud.example.com/flare</code>, which would end up being forwarded to <code>http://flare.example.com/cloud.jpg</code>.</p>
			<h4>Some helpful tips:</h4>
			<ol>
				<li>If you want to match both http and https, it is enough to write example.com. You don’t need to do *.example.com.</li>
				<li>If you want to match every page on a domain, you need to write example.com/*. It is not enough to write example.com.</li>
			</ol>
			<h4>What does Cache Everything do?</h4>
			<p> In Page Rules, you can select an additional Caching Level that is only available in Page Rules: Cache Everything.  Cache Everything caches all content including html and dynamic/personalized content. That said, use with caution. It caches HTTP codes <code>200</code>, <code>301</code>, <code>302</code>, <code>303</code>, <code>403</code> and <code>404</code>. (Other HTTP response codes can be cached by specifying the URL and setting the Edge Cache TTL to “respect existing headers”, assuming the origin allows caching.)</p>
			<h4>How do you specify cookie names for Bypass Cache Cookie or Cache on Cookie?</h4>
			<p> <em>Note that Bypass Cache on Cookie is available only on Business and Enterprise plans &amp; Cache on Cookie is Enterprise only.</em><br>You can specify multiple cookie names by using the OR “|” operator. For example, to match <code>cookie1</code>, <code>cookie2</code>, or <code>cookie3</code>, you would write: <code>cookie1|cookie2|cookie3</code>. You can also use the wildcard “.*” operator, i.e. <code>cookie1.*</code>.</p>
			<h4>Bypass Cache on Cookie (Business &amp; Enterprise) Tutorials:</h4>
			<ul>
				<li><a href="https://support.cloudflare.com/hc/en-us/articles/236166048-Caching-Static-HTML-with-WordPress-WooCommerce">Caching Static HTML with WordPress/WooCommerce</a></li>
				<li><a href="https://support.cloudflare.com/hc/en-us/articles/236168808">Caching Static HTML with Magento (version 1 &amp; 2)</a></li>
				<li><a href="https://support.cloudflare.com/hc/en-us/articles/115002911927-Caching-HTML-with-Drupal">Caching HTML with Drupal</a></li>
				<li><a href="https://support.cloudflare.com/hc/en-us/articles/200172256-How-do-I-cache-static-HTML">How do I cache static HTML?</a> </li>
			</ul>
			<h4>What do Resolve Override and Host Header Override do (Enterprise only)?</h4>
			<p> Resolve Override changes the origin address that a request to a URL will be sent to. Host Override changes the Host Header on requests to that URL. More information is available on our knowledge base about <a href="https://support.cloudflare.com/hc/en-us/articles/206190798-Using-Resolve-Override-in-Page-Rules">Resolve Override</a> and <a href="https://support.cloudflare.com/hc/en-us/articles/206652947-Using-Page-Rules-to-Re-Write-Host-Headers">Host Header Override</a></p>
		</div>
	</div>
</section>
